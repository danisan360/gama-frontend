[{"C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\index.tsx":"1","C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\App.tsx":"2","C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\routes.tsx":"3","C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\pages\\Login\\index.tsx":"4","C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\pages\\Register\\index.tsx":"5"},{"size":230,"mtime":1620678383872,"results":"6","hashOfConfig":"7"},{"size":245,"mtime":1620682061794,"results":"8","hashOfConfig":"7"},{"size":431,"mtime":1620678383917,"results":"9","hashOfConfig":"7"},{"size":1505,"mtime":1620681635929,"results":"10","hashOfConfig":"7"},{"size":150,"mtime":1620678383901,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cncnbj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\index.tsx",[],["24","25","26","27","28"],"C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\App.tsx",[],"C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\routes.tsx",[],"C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\pages\\Login\\index.tsx",["29"],"import React, { useState } from 'react'\r\nimport { Form, Button, Icon } from 'react-bulma-components'\r\n\r\nimport './styles.css'\r\n\r\nconst Login: React.FC = () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  function validateForm() {\r\n    return email.length > 0 && password.length > 0\r\n  }\r\n\r\n  function handleSubmit(event: React.FormEvent<HTMLInputElement>) {\r\n    event.preventDefault()\r\n  }\r\n  return (\r\n    <div className=\"Login\">\r\n      <Form.Field onSubmit={handleSubmit}>\r\n        <Form.Control>\r\n          <Form.Input\r\n            placeholder=\"E-mail\"\r\n            name=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <Icon align=\"left\">\r\n            <i className=\"github\" />\r\n          </Icon>\r\n        </Form.Control>\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Form.Control>\r\n          <Form.Input\r\n            placeholder=\"Senha\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={e => setPassword(e.target.value)}\r\n          />\r\n          <Icon align=\"left\">\r\n            <i className=\"github\" />\r\n          </Icon>\r\n        </Form.Control>\r\n      </Form.Field>\r\n      <Button.Group>\r\n        <Button\r\n          fullwidth\r\n          rounded\r\n          color=\"primary\"\r\n          disabled={!validateForm()}\r\n          onClick={() => console.log(this)}\r\n        >\r\n          Entrar\r\n        </Button>\r\n      </Button.Group>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Acer\\Desktop\\gama-frontend\\src\\pages\\Register\\index.tsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":50,"column":26,"nodeType":"42","messageId":"43","endLine":50,"endColumn":37},"lines-around-directive",["44"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]